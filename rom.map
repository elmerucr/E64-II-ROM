
Files:
  init.o:  TEXT fc0000(66), DATA 400(8), BSS 408(4) hex
  kernel.o:  TEXT fc0066(2c) hex
  vicv.o:  TEXT fc0092(2), RODATA fc0094(4) hex


Section mapping (numbers in hex):
------------------------------
  00fc0000 TEXT  (size 98, allocated 97)
           00fc0000 - 00fc0066 init.o(TEXT)
           00fc0066 - 00fc0092 kernel.o(TEXT)
           00fc0092 - 00fc0094 vicv.o(TEXT)
           00fc0094 - 00fc0098 vicv.o(RODATA)
------------------------------
  00fc0098 DATA  (size 8)
           00000400 - 00000408 init.o(DATA)
------------------------------
  00fc00a0 BSS  (size 4, allocated 0)
           00000408 - 0000040c init.o(BSS)


Symbols of TEXT:
  0x00000000 vicv.s: local abs file, size 0
  0x00000000 kernel.s: local abs file, size 0
  0x00fc0000 _TEXT_START: global reloc, size 0
  0x00fc0008 init_kernel: local reloc, size 0
  0x00fc001c relocate_sections: local reloc, size 0
  0x00fc0064 update_vector_table: local reloc, size 0
  0x00fc0066 memcpy: global reloc, size 0
  0x00fc007c memset: global reloc, size 0
  0x00fc0092 vicv_interrupt_handler: global reloc, size 0
  0x00fc0094 vicv_base: global reloc, size 0
  0x00fc0098 _TEXT_END: global reloc, size 0

Symbols of DATA:
  0x00000400 onzin_info: local reloc, size 0
  0x00fc0098 _DATA_START: global reloc, size 0
  0x00fc00a0 _DATA_END: global reloc, size 0

Symbols of BSS:
  0x00000000 init.s: local abs file, size 0
  0x00000408 _BSS_START: global reloc, size 0
  0x00000408 aa: global reloc, size 0
  0x0000040a bb: global reloc, size 0
  0x0000040c _BSS_END: global reloc, size 0

Linker symbols:
  0x00fc0000 _ROM_START: global abs, size 0
  0x00000400 _RAM_START: global abs, size 0
